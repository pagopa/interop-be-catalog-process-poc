version: "3"
name: pagopa-interop
services:
  event-store:
    volumes:
      - ./event-store-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    image: postgres:14
    ports:
      - 6001:5432
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    command: -c 'max_connections=512' -c 'wal_level=logical'

  zookeeper:
    image: quay.io/debezium/zookeeper:2.3

  kafka:
    image: quay.io/debezium/kafka:2.3
    ports:
      - 9092:9092
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_HOST://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  connect:
    image: quay.io/debezium/connect:2.3
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT__BINARY_HANDLING_MODE: hex
    depends_on:
      - kafka

  readmodel:
    image: mongo:4.0
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  # Mongo Express is a web-based MongoDB admin interface, included for convenience
  mongo-express:
    image: mongo-express:1.0.2-20
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_AUTH_USERNAME: root
      ME_CONFIG_MONGODB_AUTH_PASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@readmodel:27017/
    depends_on:
      - readmodel
    restart: always

  # PGAdmin is a web-based PostgreSQL admin interface, included for convenience
  pg-admin:
    image: dpage/pgadmin4:2024-04-01-1
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: root@example.com
      PGADMIN_DEFAULT_PASSWORD: example
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    restart: always
    volumes:
      - ./pg-servers.json:/pgadmin4/servers.json
      - ./pg-pass:/pgadmin4/pgpass
    # see https://stackoverflow.com/a/69475874/846273
    entrypoint: >
      /bin/sh -c "
      mkdir -m 700 /var/lib/pgadmin/storage/root_example.com;
      chown -R pgadmin:pgadmin /var/lib/pgadmin/storage/root_example.com;
      cp -prv /pgadmin4/pgpass /var/lib/pgadmin/storage/root_example.com/;
      chmod 600 /var/lib/pgadmin/storage/root_example.com/pgpass;
      /entrypoint.sh
      "
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:53a6553765a806eda9905c43bfcfe09da6812035
    ports:
      - 8084:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  # MinIO is a local S3-compatible storage, to replace AWS S3 in local development
  minio:
    image: quay.io/minio/minio:RELEASE.2024-02-06T21-36-22Z
    entrypoint: sh
    command: >
      -c 'mkdir -p /data/interop-local-bucket &&
      /usr/bin/minio server /data --console-address ":9001"'
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: test-aws-key # use this as AWS S3 access key ID
      MINIO_ROOT_PASSWORD: test-aws-secret # use this as AWS S3 secret access key
      MINIO_SITE_REGION: eu-central-1
    volumes:
      - ./minio-data:/data
    restart: always

  # ElasticMQ is a local SQS-compatible queue system, to replace AWS SQS in local development
  elasticmq:
    image: softwaremill/elasticmq-native:1.5.7
    ports:
      - 9324:9324
      - 9325:9325
    volumes:
      - ./elasticmq.local.conf:/opt/elasticmq.conf
    restart: always

  # Mailpit is a local SMTP server, to replace AWS SES in local development
  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025

  # Redis local cache database used by the RateLimiter
  redis:
    image: 'redis:7.2.5-alpine3.20'
    ports:
      - '6379:6379'
